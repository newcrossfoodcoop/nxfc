#%RAML 0.8

title: NXFC Checkout and Orders
baseUri: http://localhost:3030/api
version: 0.1.0

schemas:
  - Order: !include schema/order.json

resourceTypes:
  - base:
      get?:
        responses: &standardResponses
          200:
            description: OK
      delete?:
        responses: *standardResponses
  - collection:
      type: base
      get:
  - typedCollection:
      type: collection
      get:
        responses:
          200:
            body:
              application/json:
                schema: <<collectionSchema>>
  - typedMemberCollection:
      type: collection
      get:
        description: List <<schema>>
        responses:
          200:
            body:
              application/json:
                schema: |
                  {
                    "$schema": "http://json-schema.org/draft-03/schema#", 
                    "type": "array", 
                    "properties": { "$ref": "<<schema>>" } 
                  }
  - member:
      type: base
      get:
      delete:
  - typedMember:
      type: member
      get:
        description: Read <<schema>>
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      delete:
        description: Delete <<schema>>
    
/checkout:
  displayName: Checkout
  /config:
    get:
      description: Get the current checkout configuration
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema#",
                  "type": "object",
                  "properties": {
                    "active": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": { "type": "string" },
                          "buttonImageUrl": { "type": "string" }
                        }
                      }
                    }
                  }
                }
  /{method}:
    post:
      description: Start the payment process
      body:
        application/json:
          schema: Order
          example: |
            {
              "state": "new",
              "items": [
                { "_product": "thingyId", "price": 1.00,"total": 2.00, "name": "thingy", "quantity": 2}
              ],
              "total" : 2.00,
              "user": "myuserid",
              "orderType": "customer",
              "method": "local-psp"
            }
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema#",
                  "type": "object",
                  "properties": {
                    "redirect": { "type": "string" }
                  }
                }
    /{checkoutOrderId}/{token}:
      /redirected:
        put:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema#",
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              example: |
                {
                    "token": "TOKEN"
                }
          responses:
            200:
              body:
                application/json:
                  schema: Order
      /confirm:
        get:
          responses:
            200:
              body:
                application/json:
                  schema: Order
      /cancelled:
        put:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema#",
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              example: |
                {
                    "token": "TOKEN"
                }
          responses:
            200:
              body:
                application/json:
                  schema: Order
            400:
              description: Order can no longer be cancelled via the checkout.
/orders:
  displayName: Orders
  type: { typedMemberCollection: { schema: Order } }
  /history/{orderUserId}:
    get:
      description: Get a user's order history
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-03/schema#", 
                  "type": "array", 
                  "properties": { "$ref": "Order" } 
                }
  /{orderId}:
    type: { typedMember: { schema: Order } }
    /recalculate:
      get:
        description: Recalculate this order without looking up products
        responses:
          200:
            body:
              application/json:
                schema: Order 
      put:
        description: Recalculate this order, looks up CURRENT product details
        responses:
          200:
            body:
              application/json:
                schema: Order
    /finalise:
      put:
        description: Finalise an order, 
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-03/schema#", 
                "type": "array",
                "properties": {
                  "productId": { "type": "string", "required": true, "pattern": "^[a-f0-9]{24}$" },
                  "quantity": { "type": "integer", "required": true },
                  "action": { 
                    "type": "string", 
                    "required": true,
                    "enum": [ "cancel", "finalise" ]
                  }
                }
              }
        responses:
          200:
            body:
              application/json:
                schema: Order
          400:
            body:
              application/json:
                schema: |
                  {
                    "$schema": "http://json-schema.org/draft-03/schema#", 
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "required": true }
                    }
                  }
                example: |
                  {
                    "message": "Can only finalised confirmed orders"
                  }
/checkout/{method}/{checkoutOrderId}/close:
  get:
    responses:
      200:
        body:
          application/json:
            schema: Order
